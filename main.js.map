{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/coin.ts","webpack:///./src/app/components/add-coin/add-coin.component.css","webpack:///./src/app/components/add-coin/add-coin.component.html","webpack:///./src/app/components/add-coin/add-coin.component.ts","webpack:///./src/app/components/edit-portfolio/edit-portfolio.component.css","webpack:///./src/app/components/edit-portfolio/edit-portfolio.component.html","webpack:///./src/app/components/edit-portfolio/edit-portfolio.component.ts","webpack:///./src/app/components/graph/graph.component.css","webpack:///./src/app/components/graph/graph.component.html","webpack:///./src/app/components/graph/graph.component.ts","webpack:///./src/app/components/market-page/market-page.component.css","webpack:///./src/app/components/market-page/market-page.component.html","webpack:///./src/app/components/market-page/market-page.component.ts","webpack:///./src/app/components/market-table/market-table.component.css","webpack:///./src/app/components/market-table/market-table.component.html","webpack:///./src/app/components/market-table/market-table.component.ts","webpack:///./src/app/components/navigation/navigation.component.css","webpack:///./src/app/components/navigation/navigation.component.html","webpack:///./src/app/components/navigation/navigation.component.ts","webpack:///./src/app/components/pie-chart/pie-chart.component.css","webpack:///./src/app/components/pie-chart/pie-chart.component.html","webpack:///./src/app/components/pie-chart/pie-chart.component.ts","webpack:///./src/app/components/portfolio-summary/portfolio-summary.component.css","webpack:///./src/app/components/portfolio-summary/portfolio-summary.component.html","webpack:///./src/app/components/portfolio-summary/portfolio-summary.component.ts","webpack:///./src/app/components/portfolio-table/portfolio-table.component.css","webpack:///./src/app/components/portfolio-table/portfolio-table.component.html","webpack:///./src/app/components/portfolio-table/portfolio-table.component.ts","webpack:///./src/app/portfolio-page/portfolio-page.component.css","webpack:///./src/app/portfolio-page/portfolio-page.component.html","webpack:///./src/app/portfolio-page/portfolio-page.component.ts","webpack:///./src/app/services/coin-market-cap.service.ts","webpack:///./src/app/services/csv-download.service.ts","webpack:///./src/app/services/local-storage.service.ts","webpack:///./src/app/services/portfolio.service.ts","webpack:///./src/app/sorted-table.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".cx {\\n    min-width: 600px;\\n    overflow-x: scroll;\\n}\\n\"","module.exports = \"<div\\n    class=\\\"{{cx ? 'cx' : null}}\\\"\\n>\\n    <app-navigation></app-navigation>\\n    <router-outlet></router-outlet>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PortfolioService} from './services/portfolio.service';\nimport {Router} from '@angular/router';\n\nimport {environment} from '../environments/environment';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\n    public cx: boolean = environment.cx;\n\n\n    constructor(private portfolioService: PortfolioService,\n                private router: Router) {\n\n\n    }\n\n    ngOnInit() {\n\n\n        const COINS = this.portfolioService.getCoins();\n\n        if (!(COINS && Array.isArray(COINS) && COINS.length > 0)) {\n\n            this.router.navigate(['edit']);\n        }\n    }\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {PortfolioService} from './services/portfolio.service';\nimport {CoinMarketCapService} from './services/coin-market-cap.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {PortfolioTableComponent} from './components/portfolio-table/portfolio-table.component';\nimport {EditPortfolioComponent} from './components/edit-portfolio/edit-portfolio.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {LocalStorageService} from './services/local-storage.service';\nimport {GraphComponent} from './components/graph/graph.component';\nimport {FormsModule} from '@angular/forms';\nimport {MarketTableComponent} from './components/market-table/market-table.component';\nimport {NavigationComponent} from './components/navigation/navigation.component';\nimport {CsvDownloadService} from './services/csv-download.service';\nimport {PieChartComponent} from './components/pie-chart/pie-chart.component';\nimport {PortfolioPageComponent} from './portfolio-page/portfolio-page.component';\nimport {AddCoinComponent} from './components/add-coin/add-coin.component';\nimport {PortfolioSummaryComponent} from './components/portfolio-summary/portfolio-summary.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MarketPageComponent} from './components/market-page/market-page.component';\n\nconst appRoutes: Routes = [\n    {\n\n        path: '',\n        component: PortfolioPageComponent,\n        children: [\n            {\n                path: '',\n                component: PortfolioSummaryComponent,\n\n            },\n            {\n                path: 'portfolio',\n                component: PortfolioSummaryComponent,\n            },\n            {\n                path: 'portfolio/edit',\n                component: EditPortfolioComponent\n            },\n            {\n                path: 'portfolio/add',\n                component: AddCoinComponent\n            }\n        ]\n    },\n    {\n        path: 'market',\n        component: MarketPageComponent,\n\n    },\n    {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PortfolioTableComponent,\n        EditPortfolioComponent,\n        GraphComponent,\n        MarketTableComponent,\n        NavigationComponent,\n        PieChartComponent,\n        PortfolioPageComponent,\n        AddCoinComponent,\n        PortfolioSummaryComponent,\n        MarketPageComponent,\n    ],\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        HttpClientModule,\n        RouterModule.forRoot(\n            appRoutes,\n            {enableTracing: false} // <-- debugging purposes only\n        ),\n    ],\n    providers: [\n        PortfolioService,\n        CoinMarketCapService,\n        LocalStorageService,\n        CsvDownloadService,\n    ],\n    exports: [\n        RouterModule,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n\n","export class Coin {\n\n  constructor(public id: string,\n              public name: string,\n              public symbol: string,\n              public rank: number,\n              public price_usd: number,\n              public price_btc: number,\n              public market_cap_usd: number,\n              public available_supply: number,\n              public total_supply: number,\n              public max_supply: number,\n              public percent_change_1h: number,\n              public percent_change_24h: number,\n              public percent_change_7d: number,\n              public last_updated: number | string,\n              public volume_usd_24?: number,\n              public value?: number,\n              public coins?: number) {\n\n  }\n\n\n  public setValue(value_: number): void {\n\n    if (isFinite(value_)) {\n\n\n      this.value = value_;\n\n    }\n  }\n\n  public setCoins(value_: number): void {\n\n    if (isFinite(value_)) {\n\n\n      this.coins = value_;\n\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Add Coin</h3>\\n<form (submit)=\\\"handleSubmit(); addCoin.reset();\\\" #addCoin=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">coin</label>\\n        <input\\n            [(ngModel)]=\\\"model.name\\\"\\n            id=\\\"name\\\"\\n            name=\\\"name\\\"\\n            class=\\\"form-control-sm\\\"\\n            required\\n            #name=\\\"ngModel\\\"\\n        >\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"hodl\\\">hodl</label>\\n        <input\\n            class=\\\"form-control-sm\\\"\\n            type=\\\"number\\\"\\n            id=\\\"hodl\\\"\\n            name=\\\"hodl\\\"\\n            [min]=\\\"0\\\"\\n            [(ngModel)]=\\\"model.hodl\\\"\\n            required\\n            #hodl=\\\"ngModel\\\"\\n        >\\n    </div>\\n    <button\\n        [disabled]=\\\"!addCoin.form.valid\\\"\\n        type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save!\\n    </button>\\n</form>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PortfolioService} from '../../services/portfolio.service';\n\n@Component({\n    selector: 'app-add-coin',\n    templateUrl: './add-coin.component.html',\n    styleUrls: ['./add-coin.component.css']\n})\nexport class AddCoinComponent implements OnInit {\n\n    public model = {\n        name: '',\n        hodl: 0\n    };\n\n\n    constructor(public portfolioService: PortfolioService) {\n    }\n\n    ngOnInit() {\n    }\n\n    handleSubmit() {\n\n        this.portfolioService.addCoin(this.model.name, this.model.hodl);\n\n    }\n}\n","module.exports = \"\"","module.exports = \"<table\\n    id=\\\"editPortfolio\\\"\\n    class=\\\"table table-responsive table-striped table-hover\\\">\\n    <caption>Edit Portfolio</caption>\\n    <thead>\\n    <tr>\\n        <th>name</th>\\n        <th class=\\\"text-right\\\">hodl</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n\\n    <tbody>\\n    <tr *ngFor=\\\"let coin of portfolioService.getCoins()\\\">\\n\\n        <td\\n\\n        >{{coin[0]}}\\n        </td>\\n        <td class=\\\"text-right\\\">\\n            <form\\n                *ngIf=\\\"editMode\\\"\\n                (submit)=\\\"portfolioService.editCoin(coin[0], coinAge.value); editMode = false;\\\">\\n                <input\\n                    #coinAge\\n                    value=\\\"{{coin[1]}}\\\"\\n                    class=\\\"form-control-inline\\\"\\n                >\\n                <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"submit\\\">save!</button>\\n            </form>\\n\\n            <span *ngIf=\\\"!editMode\\\" (click)=\\\"editMode = !editMode\\\" style=\\\"cursor: pointer;\\\">\\n              {{coin[1] | number}}\\n            </span>\\n        </td>\\n\\n        <td>\\n            <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"portfolioService.deleteCoin(coin[0])\\\">\\n                Delete\\n            </button>\\n        </td>\\n\\n    </tr>\\n    </tbody>\\n    <tfoot>\\n\\n    </tfoot>\\n</table>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PortfolioService} from '../../services/portfolio.service';\nimport {LocalStorageService} from '../../services/local-storage.service';\n\n@Component({\n    selector: 'app-edit-portfolio',\n    templateUrl: './edit-portfolio.component.html',\n    styleUrls: ['./edit-portfolio.component.css']\n})\nexport class EditPortfolioComponent implements OnInit {\n\n\n    public editMode = false;\n\n\n\n    constructor(public portfolioService: PortfolioService, public localStorageService: LocalStorageService) {\n    }\n\n    ngOnInit() {\n\n\n    }\n\n\n\n\n}\n","module.exports = \"#chart {\\n\\n    border-radius: 4px;\\n    background: white;\\n}\\n\\nform {\\n\\n    padding-right: 3%;\\n}\\n\\n\\n\"","module.exports = \"<main class=\\\"container\\\">\\n\\n    <h1>{{activeParam}} Graph</h1>\\n\\n    <div id=\\\"chart\\\"></div>\\n\\n    <br/>\\n\\n    <div class=\\\"row\\\">\\n        <form>\\n            <label for=\\\"param\\\">param</label>\\n            <select class=\\\"form-control-sm\\\"\\n                    #activeParamInput\\n                    id=\\\"param\\\"\\n                    name=\\\"param\\\"\\n                    [value]=\\\"activeParam\\\"\\n                    (change)=\\\"activeParam = activeParamInput.value; updateGraph();\\\"\\n            >\\n                <option *ngFor=\\\"let key of keys\\\" [value]=\\\"key\\\">{{key}}</option>\\n            </select>\\n        </form>\\n\\n        <button class=\\\"{{descending ? 'btn btn-danger' : 'btn btn-success'}}\\\" [disabled]=\\\"descending\\\"\\n                (click)=\\\"toggleDescending()\\\">Top 10\\n        </button>\\n        <button class=\\\"{{descending ? 'btn btn-success' : 'btn btn-danger'}}\\\" [disabled]=\\\"!descending\\\"\\n                (click)=\\\"toggleDescending()\\\">Bottom 10\\n        </button>\\n    </div>\\n\\n</main>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PortfolioService} from '../../services/portfolio.service';\nimport {Coin} from '../../coin';\n\n// import * as d3 from 'd3';\n\nimport * as c3 from 'c3';\nimport {CoinMarketCapService} from '../../services/coin-market-cap.service';\n\n@Component({\n    selector: 'app-graph',\n    templateUrl: './graph.component.html',\n    styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent implements OnInit {\n\n\n    keys = [\n        'rank',\n        'price_usd',\n        'price_btc',\n        '24h_volume_usd',\n        'market_cap_usd',\n        'available_supply',\n        'total_supply',\n        'max_supply',\n        'percent_change_1h',\n        'percent_change_24h',\n        'percent_change_7d'\n    ];\n\n    public descending = true;\n\n    public activeParam = this.keys[this.keys.length - 1];\n\n\n    constructor(public portfolioService: PortfolioService,\n                public coinMarketCapService: CoinMarketCapService) {\n\n\n    }\n\n    ngOnInit() {\n\n        this.updateGraph();\n\n\n    }\n\n    private mapToRow(coin: Coin): (string | number)[] {\n\n        return [coin.id, coin[this.activeParam]];\n    }\n\n    public toggleDescending() {\n\n        this.descending = !this.descending;\n\n        this.updateGraph();\n    }\n\n\n    public updateGraph(): void {\n\n\n        this.coinMarketCapService.marketData().subscribe((coins: Coin[]) => {\n\n            const mapped = coins\n                .sort((a, b) => this.descending ? b[this.activeParam] - a[this.activeParam] : a[this.activeParam] - b[this.activeParam])\n                .slice(0, 10)\n                .map((c) => this.mapToRow(c));\n\n\n            c3.generate({\n                bindto: '#chart',\n                data: {\n                    columns: mapped,\n                    type: 'bar'\n                },\n                bar: {\n                    width: {\n                        ratio: 0.5 // this makes bar width 50% of length between ticks\n                    }\n                    // or\n                }\n            });\n\n        });\n\n\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n\\n        <app-market-table></app-market-table>\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n        <app-graph></app-graph>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-market-page',\n  templateUrl: './market-page.component.html',\n  styleUrls: ['./market-page.component.css']\n})\nexport class MarketPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"th {\\n    cursor: pointer;\\n}\\n\"","module.exports = \"<main class=\\\"container\\\">\\n  <table class=\\\"table table-responsive table-hover\\\">\\n    <caption>Market Data</caption>\\n    <thead>\\n    <tr>\\n      <th\\n        (click)=\\\"handleNewSort('rank')\\\"\\n        class=\\\"text-capitalize text-left\\\"\\n      >\\n        name\\n      </th>\\n      <th class=\\\"text-right\\\"\\n          (click)=\\\"handleNewSort('price_usd')\\\"\\n      >Price (USD)\\n      </th>\\n      <th class=\\\"text-right\\\"\\n          (click)=\\\"handleNewSort('price_btc')\\\"\\n      >Price (BTC)\\n      </th>\\n      <th class=\\\"text-right\\\"\\n          (click)=\\\"handleNewSort('available_supply')\\\"\\n      >Available Supply\\n      </th>\\n      <th class=\\\"text-right\\\"\\n          (click)=\\\"handleNewSort('percent_change_24h')\\\"\\n      >24h %\\n      </th>\\n      <th class=\\\"text-right\\\"\\n          (click)=\\\"handleNewSort('percent_change_7d')\\\"\\n      >7d %\\n      </th>\\n\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let coin of sortedCoins()\\\">\\n      <td>\\n        <a href=\\\"{{'https://coinmarketcap.com/currencies/' + coin.id}}\\\" target=\\\"_blank\\\">\\n          {{coin.rank}}\\n          {{' '}}\\n          <span [class]=\\\"'icon icon-' + coin.symbol.toLowerCase()\\\"></span>\\n          {{coin.id}}\\n        </a>\\n      </td>\\n      <td class=\\\"text-right\\\">{{coin.price_usd | currency}}</td>\\n      <td class=\\\"text-right\\\">{{coin.price_btc | number: '1.3-6'}}</td>\\n      <td class=\\\"text-right\\\">{{coin.available_supply | number: '1.0'}}</td>\\n      <td class=\\\"text-right\\\">{{coin.percent_change_24h | number}}</td>\\n      <td class=\\\"text-right\\\">{{coin.percent_change_7d | number }}</td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</main>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {CoinMarketCapService} from '../../services/coin-market-cap.service';\nimport {Coin} from '../../coin';\nimport {SortedTable} from '../../sorted-table';\n\n\n@Component({\n    selector: 'app-market-table',\n    templateUrl: './market-table.component.html',\n    styleUrls: ['./market-table.component.css']\n})\nexport class MarketTableComponent extends SortedTable implements OnInit, OnDestroy {\n\n\n    private interval;\n\n\n    constructor(public coinMarketCapService: CoinMarketCapService) {\n\n        super();\n    }\n\n    ngOnInit() {\n\n        this.interval = setInterval(() => this.getCoins(), 1000 * 30);\n        this.getCoins();\n    }\n\n    ngOnDestroy() {\n\n        clearInterval(this.interval);\n    }\n\n    getCoins() {\n\n        return this.coinMarketCapService.marketData().subscribe((marketData: Coin[]) => {\n\n            this.coins = marketData;\n        });\n    }\n\n\n}\n","module.exports = \"nav {\\n\\n    padding: 3%;\\n}\\n\\n.flexer {\\n\\n    display: flex;\\n    justify-content: space-around;\\n    align-items: center;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-primary\\\">\\n<a class=\\\"navbar-brand\\\" routerLink=\\\"/portfolio\\\">Alt Folio</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTop\\\"\\n          aria-controls=\\\"navbarTop\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTop\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\"><a routerLink=\\\"/portfolio\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"btn-success\\\">Portfolio</a></li>\\n            <li class=\\\"nav-item\\\"><a routerLink=\\\"/market\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"btn-success\\\">Market</a></li>\\n        </ul>\\n    </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CsvDownloadService} from '../../services/csv-download.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(public csvDownloadService: CsvDownloadService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"pie-chart\\\"></div>\\n\"","import {Component, OnInit} from '@angular/core';\n\nimport * as c3 from 'c3';\nimport {Coin} from '../../coin';\nimport {CoinMarketCapService} from '../../services/coin-market-cap.service';\nimport {PortfolioService} from '../../services/portfolio.service';\n\n@Component({\n    selector: 'app-pie-chart',\n    templateUrl: './pie-chart.component.html',\n    styleUrls: ['./pie-chart.component.css']\n})\nexport class PieChartComponent implements OnInit {\n\n\n    coins: Coin[] = [];\n\n    constructor(private coinMarketCapService: CoinMarketCapService,\n                private portfolioService: PortfolioService) {\n    }\n\n    ngOnInit() {\n\n        this.getCoins();\n\n    }\n\n\n    private getCoins() {\n\n\n        this.coinMarketCapService.marketData().subscribe((coins: Coin[]) => {\n\n            this.coins = this.portfolioService.mergeMarketAndCoinData(coins);\n\n            this.generatePieChart();\n        });\n    }\n\n\n    private generatePieChart() {\n\n\n        function mapToChart(coin) {\n\n            return [coin.name, coin.value];\n        }\n\n        c3.generate({\n            bindto: '#pie-chart',\n            data: {\n                // iris data from R\n                columns: this.coins.map(mapToChart),\n                type: 'pie',\n                // onclick: function (d, i) {\n                //     console.log('onclick', d, i);\n                // },\n                // onmouseover: function (d, i) {\n                //     console.log('onmouseover', d, i);\n                // },\n                // onmouseout: function (d, i) {\n                //     console.log('onmouseout', d, i);\n                // }\n            }\n        });\n\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <app-portfolio-table></app-portfolio-table>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <app-pie-chart></app-pie-chart>\\n    </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-portfolio-summary',\n  templateUrl: './portfolio-summary.component.html',\n  styleUrls: ['./portfolio-summary.component.css']\n})\nexport class PortfolioSummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".loading {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    font-size: 1.3rem;\\n}\\n\\n\\n.table-container {\\n\\n    height: 60vh;\\n    min-height: 100px;\\n    max-height: 800px;\\n}\\n\\n\\ntable {\\n    display: flex;\\n    flex-flow: column;\\n    height: 100%;\\n    width: 100%;\\n}\\n\\n\\nthead {\\n    /* head takes the height it requires,\\n    and it's not scaled when table is resized */\\n    flex: 0 0 auto;\\n    width: calc(100% - 0.9em);\\n}\\n\\n\\ntbody {\\n    /* body takes all the remaining available space */\\n    flex: 1 1 auto;\\n    display: block;\\n    overflow-y: scroll;\\n}\\n\\n\\ntbody tr {\\n    width: 100%;\\n}\\n\\n\\ntable thead, table tbody tr {\\n    display: table;\\n    table-layout: fixed;\\n}\\n\"","module.exports = \"<div [ngSwitch]=\\\"portfolioService.coins.length > 0\\\">\\n  <div *ngSwitchDefault class=\\\"loading\\\">\\n    <h2>Loading...</h2>\\n  </div>\\n  <div *ngSwitchCase=\\\"true\\\">\\n    <div class=\\\"table-container\\\">\\n      <table id=\\\"portfolioTable\\\" class=\\\"table table-responsive table-hover\\\">\\n        <caption>Portfolio</caption>\\n        <thead>\\n        <tr>\\n          <th class=\\\"text-capitalize text-right\\\"\\n              (click)=\\\"handleNewSort('rank')\\\"\\n          >coin\\n          </th>\\n          <th class=\\\"text-capitalize text-right\\\"\\n              (click)=\\\"handleNewSort('price_usd')\\\"\\n          >$\\n          </th>\\n          <th class=\\\"text-capitalize text-right\\\"\\n              (click)=\\\"handleNewSort('price_btc')\\\"\\n          >btc\\n          </th>\\n          <th class=\\\"text-capitalize text-right\\\"\\n              (click)=\\\"handleNewSort('coins')\\\"\\n          >hodl\\n          </th>\\n          <th class=\\\"text-capitalize text-right\\\"\\n              (click)=\\\"handleNewSort('value')\\\"\\n          >Value\\n          </th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\" let coin of sortedCoins()\\n                \\\">\\n          <td>\\n            <a href=\\\"{{'https://coinmarketcap.com/currencies/' + coin.id}}\\\" target=\\\"_blank\\\">\\n              <span [class]=\\\"'icon icon-' + coin.symbol.toLowerCase()\\\"></span>\\n              {{coin.id}}\\n            </a>\\n          </td>\\n\\n          <td class=\\\"text-right\\\">{{coin.price_usd | currency }}</td>\\n          <td class=\\\"text-right\\\">{{coin.price_btc | number: '1.3-6'}}</td>\\n          <td class=\\\"text-right\\\">{{coin.coins | number: '1.0-4'}}</td>\\n          <td class=\\\"text-right\\\">{{coin.value | currency }}</td>\\n        </tr>\\n\\n\\n        </tbody>\\n        <tfoot style=\\\"font-size: large\\\">\\n        <tr>\\n          <td><b>\\n            Equivalent Value:\\n          </b></td>\\n          <td\\n            title=\\\"Equivalent BTC\\\"\\n            [attr.colspan]=\\\"4\\\"\\n            class=\\\"text-right\\\"\\n          >\\n            {{portfolioService.totalBTC() | number}} btc\\n          </td>\\n        </tr>\\n        <tr>\\n          <td\\n            title=\\\"Equivalent $\\\"\\n            [attr.colspan]=\\\"5\\\"\\n            class=\\\"text-right\\\"\\n          >\\n\\n            {{portfolioService.totalUSD() | currency}}\\n          </td>\\n        </tr>\\n        </tfoot>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {PortfolioService} from '../../services/portfolio.service';\nimport {SortedTable} from '../../sorted-table';\nimport {CoinMarketCapService} from '../../services/coin-market-cap.service';\nimport {Coin} from '../../coin';\nimport {CsvDownloadService} from '../../services/csv-download.service';\n\nimport {\n    trigger,\n    state,\n    style,\n    animate,\n    transition\n} from '@angular/animations';\n\n@Component({\n    selector: 'app-portfolio-table',\n    templateUrl: './portfolio-table.component.html',\n    styleUrls: ['./portfolio-table.component.css'],\n\n\n    animations: [\n        trigger('loadedState', [\n            state('true', style({\n                color: 'green',\n                height: '0px',\n                opacity: '0',\n            })),\n            state('false', style({\n                color: 'red',\n            })),\n            transition('inactive => active', animate('100ms ease-in')),\n            transition('active => inactive', animate('100ms ease-out'))\n        ]),\n        trigger('showState', [\n            state('true', style({})),\n            state('false', style({\n                opacity: '0',\n                height: '0',\n            })),\n            transition('inactive => active', animate('100ms ease-in')),\n            transition('active => inactive', animate('100ms ease-out'))\n        ])\n    ]\n})\nexport class PortfolioTableComponent extends SortedTable implements OnInit, OnDestroy {\n\n    public interval;\n\n\n    constructor(public portfolioService: PortfolioService, public coinMarketCapService: CoinMarketCapService, public csvDownloadService: CsvDownloadService) {\n\n        super();\n\n    }\n\n    ngOnInit() {\n\n        this.sortBy = 'value';\n\n        this.ascending = false;\n\n\n        this.interval = setInterval(() => {\n            this.getCoins();\n\n        }, 1000 * 30);\n\n        this.getCoins();\n\n\n    }\n\n    private getCoins() {\n\n        this.coinMarketCapService.marketData().subscribe((coins: Coin[]) => {\n\n            this.coins = this.portfolioService.mergeMarketAndCoinData(coins);\n        });\n\n    }\n\n\n    ngOnDestroy() {\n\n        clearInterval(this.interval);\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"margin-top: 3vh;\\\">\\n\\n  <ul class=\\\"nav nav-tabs\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a routerLink=\\\"/portfolio\\\" routerLinkActive=\\\"btn-success\\\" class=\\\"nav-link\\\">Details</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a routerLink=\\\"/portfolio/add\\\" routerLinkActive=\\\"btn-success\\\" class=\\\"nav-link\\\">Add Coin</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a routerLink=\\\"/portfolio/edit\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"btn-success\\\">Edit\\n        Portfolio</a>\\n    </li>\\n\\n  </ul>\\n  <router-outlet></router-outlet>\\n\\n  <nav class=\\\"navbar navbar-dark bg-primary fixed-bottom\\\">\\n\\n    <div class=\\\"btn-group\\\">\\n      <button\\n        class=\\\"btn\\\"\\n\\n        (click)=\\\"csvDownloadService.handleDownload()\\\">Download\\n      </button>\\n\\n      <button\\n        class=\\\"btn btn-danger\\\"\\n        (click)=\\\"localStorageService.deleteCoins()\\\"\\n\\n      >Delete Portfolio\\n      </button>\\n    </div>\\n  </nav>\\n\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CsvDownloadService} from '../services/csv-download.service';\nimport {LocalStorageService} from '../services/local-storage.service';\n\n@Component({\n    selector: 'app-portfolio-page',\n    templateUrl: './portfolio-page.component.html',\n    styleUrls: ['./portfolio-page.component.css']\n})\nexport class PortfolioPageComponent implements OnInit {\n\n    constructor(public csvDownloadService: CsvDownloadService, public localStorageService: LocalStorageService) {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Coin} from '../coin';\n\nimport {Observable, Subject, ReplaySubject, from, of, range, ErrorObserver} from 'rxjs';\nimport {map, filter, switchMap, retry, catchError} from 'rxjs/operators';\n\n\nexport interface ICoin {\n\n  'id': string;\n  'name': string;\n  'symbol': string;\n  'rank': number;\n  'price_usd': number;\n  'price_btc': number;\n  '24h_volume_usd': number;\n  'market_cap_usd': number;\n  'available_supply': number;\n  'total_supply': number;\n  'max_supply': number;\n  'percent_change_1h': number;\n  'percent_change_24h': number;\n  'percent_change_7d': number;\n  'last_updated': any;\n}\n\n\n@Injectable()\nexport class CoinMarketCapService {\n\n\n  url = 'https://api.coinmarketcap.com/v1/ticker/';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  private static handleError(error: HttpErrorResponse): Error {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an ErrorObservable with a user-facing error message\n    return new Error(\n      'Something bad happened; please try again later.');\n  }\n\n\n  public marketData(): Observable<Coin[]> {\n\n    return this.http.get<ICoin[]>(this.url)\n      .pipe(\n        retry(3),\n        //catchError(CoinMarketCapService.handleError),\n        map((res: ICoin[]) => res.map(item => new Coin(\n          item.id,\n          item.name,\n          item.symbol,\n          item.rank,\n          item.price_usd,\n          item.price_btc,\n          item.market_cap_usd,\n          item.available_supply,\n          item.total_supply,\n          item.max_supply,\n          item.percent_change_1h,\n          item.percent_change_24h,\n          item.percent_change_7d,\n          item.last_updated,\n          item['24h_volume_usd'],\n        )))\n      );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {PortfolioService} from './portfolio.service';\n\n@Injectable()\nexport class CsvDownloadService {\n\n  constructor(public portfolioService: PortfolioService) { }\n\n\n    handleDownload() {\n\n        const dater: string = new Date().toLocaleDateString().replace(new RegExp('\\/', 'g'), '-');\n\n        const fileName: string = 'portfolio-' + dater;\n\n        this.JSONToCSVConvertor(this.portfolioService.coins, fileName, true);\n    }\n\n    JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n        // If JSONData is not an object then JSON.parse will parse the JSON string in an Object\n        const arrData = typeof JSONData !== 'object' ? JSON.parse(JSONData) : JSONData;\n\n\n        let CSV = Object.keys(JSONData[0]).concat('@date@').join(',') + '\\n';\n        // Set Report title in first row or line\n\n        const dater = new Date().toISOString();\n\n        arrData.forEach(row => {\n\n            row['@date@'] = dater;\n\n            CSV += Object.values(row).join(',') + '\\n';\n        });\n\n        if (CSV === '') {\n            alert('Invalid data');\n            return;\n        }\n\n        // Generate a file name\n        const fileName = ReportTitle.replace(/ /g, '_');\n\n        // Initialize file format you want csv or xls\n        const uri = 'data:text/csv;charset=utf-8,' + encodeURIComponent(CSV);\n\n        //  Now the little tricky part.\n        //  you can use either>> window.open(uri);\n        //  but this will not work in some browsers\n        //  or you will not get the correct file extension\n\n        // this trick will generate a temp <a /> tag\n        const link = document.createElement('a');\n        link.href = uri;\n\n        // set the visibility hidden so it will not effect on your web-layout\n\n        Object.assign(link, {\n            style: 'visibility: hidden',\n            download: fileName + '.csv',\n        });\n\n        // this part will append the anchor tag and remove it after automatic click\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LocalStorageService {\n\n\n  private KEY = '@COINS@';\n\n\n  constructor() {\n\n\n  }\n\n\n  public getCoins(): (string | number)[][] {\n\n    const rawJSON = localStorage.getItem(this.KEY);\n\n\n    if (!rawJSON) {\n\n      return [];\n\n    }\n\n\n    try {\n\n      return JSON.parse(rawJSON);\n\n\n    } catch (e) {\n\n      console.error('error parsing');\n\n      this.deleteCoins();\n\n      return [];\n    }\n\n\n  }\n\n  public setCoins(coins: (string | number)[][]): void {\n\n\n    localStorage.setItem(this.KEY, JSON.stringify(coins));\n\n  }\n\n  public deleteCoins(): void {\n\n    localStorage.clear();\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {LocalStorageService} from './local-storage.service';\n\n\nimport {Coin} from '../coin';\n\n@Injectable()\nexport class PortfolioService {\n\n    public coins: Array<Coin> = [];\n\n    constructor(public localStorageService: LocalStorageService,\n    ) {\n\n    }\n\n    static assertValid(coin: (string | number)[]): boolean | (string | number)[] {\n\n\n        return coin && coin.length === 2 && coin[0] && typeof coin[0] === 'string' && isFinite(+coin[1]);\n    }\n\n    public mergeMarketAndCoinData(marketData: Coin[]): Coin[] {\n\n        const COINS: (string | number)[][] = this.getCoins();\n\n\n        this.coins = marketData.filter((coin: Coin) => COINS.find(COIN => COIN[0] === coin.id))\n            .map((coin: Coin) => {\n\n                const coins: (string | number)[] = COINS.find(COIN => COIN[0] === coin.id);\n\n                const value: number = +coins[1] * coin.price_usd;\n\n                coin.setCoins(+coins[1]);\n\n                coin.setValue(value);\n\n                return coin;\n\n            });\n\n\n        return this.coins;\n\n\n    }\n\n    public totalUSD(): number {\n        return this.coins.reduce((tot, cur) => tot + cur.value, 0);\n    }\n\n    public totalBTC(): number {\n\n        return this.coins.reduce((tot, cur) => tot + cur.price_btc * cur.coins, 0);\n    }\n\n\n    public editCoin(id: string, hodl: number): void {\n\n\n        const coins: (string | number)[][] = this.localStorageService.getCoins();\n\n        for (const coin of coins) {\n\n\n            if (coin[0] === id) {\n\n                coin[1] = hodl;\n                break;\n            }\n        }\n\n        this.localStorageService.setCoins(coins);\n\n\n    }\n\n    public addCoin(id: string, coins: number): void {\n\n\n        const COINS: (string | number)[][] = this.getCoins();\n\n        const foundIndex = COINS.findIndex(coin => coin[0] === id);\n\n        if (foundIndex < 0) {\n\n            COINS.push([id, coins]);\n        } else {\n\n            COINS[foundIndex][1] = coins;\n\n\n        }\n        this.localStorageService.setCoins(COINS);\n\n    }\n\n\n    public getCoins(): (string | number)[][] {\n\n        return this.localStorageService.getCoins()\n            .filter(coin => PortfolioService.assertValid(coin));\n\n    }\n\n\n    public deleteCoin(id: string): void {\n\n        const COINS: (string | number)[][] = this.getCoins();\n\n        const index = COINS.findIndex(coin_ => coin_[0] === id);\n\n        if (index) {\n\n            delete COINS[index];\n\n            this.localStorageService.setCoins(COINS);\n\n        }\n\n\n    }\n\n\n}\n","import {Coin} from './coin';\n\nexport class SortedTable {\n\n\n    public sortBy = 'rank';\n\n    public ascending = true;\n\n    public coins: Coin[] = [];\n\n\n    public handleNewSort(param) {\n\n        this.ascending = !this.ascending;\n\n        this.sortBy = param;\n    }\n\n    sortedCoins() {\n\n\n        return this.coins.sort((a, b) => {\n            return this.ascending ? a[this.sortBy] - b[this.sortBy] : b[this.sortBy] - a[this.sortBy];\n        });\n    }\n\n}\n","export const environment = {\n  production: true,\n  cx: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}